version: '3.4'

services:
  catalogdb:
    image: mongo

  basketdb:
    image: redis:alpine

  discountdb:
    image: postgres

  orderdb:
    image: mcr.microsoft.com/mssql/server:2017-latest

  ordersagadb:
    image: mcr.microsoft.com/mssql/server:2017-latest

  identitydb:
    image: mcr.microsoft.com/mssql/server:2017-latest

  rabbitmq:
    image: rabbitmq:3-management-alpine

  pgadmin:
    image: dpage/pgadmin4

  portainer:
    image: portainer/portainer-ce

  elasticsearch:
    image: elasticsearch:7.14.1

  kibana:
    image: kibana:7.14.1

  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile

  basket.api:
    image: ${DOCKER_REGISTRY-}basketapi
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile

  discount.api:
    image: ${DOCKER_REGISTRY-}discountapi
    build:
      context: .
      dockerfile: Services/Discount/Discount.API/Dockerfile

  discount.grpc:
    image: ${DOCKER_REGISTRY-}discountgrpc
    build:
      context: .
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile

  ordering.api:
    image: ${DOCKER_REGISTRY-}orderingapi
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.API/Dockerfile

  ocelotapigateway:
    image: ${DOCKER_REGISTRY-}ocelotapigateway
    build:
      context: .
      dockerfile: ApiGateways/OcelotApiGateway/Dockerfile

  shopping.aggregator:
    image: ${DOCKER_REGISTRY-}shoppingaggregator
    build:
      context: .
      dockerfile: ApiGateways/Shopping.Aggregator/Dockerfile

  shopping.idp:
    image: ${DOCKER_REGISTRY-}shoppingidp
    build:
      context: .
      dockerfile: Identity/Shopping.IDP/Dockerfile

  shopping.razor:
    image: ${DOCKER_REGISTRY-}shoppingrazor
    build:
      context: .
      dockerfile: Clients/Shopping.Razor/Dockerfile

  shopping.webstatus:
    image: ${DOCKER_REGISTRY-}shoppingwebstatus
    build:
      context: .
      dockerfile: Common/Shopping.WebStatus/Dockerfile

  shopping.ordersagaorchestrator:
    image: ${DOCKER_REGISTRY-}shoppingordersagaorchestrator
    build:
      context: .
      dockerfile: Orchestrators/Shopping.OrderSagaOrchestrator/Dockerfile

  payment.api:
    image: ${DOCKER_REGISTRY-}paymentapi
    build:
      context: .
      dockerfile: Services/Payment/Payment.API/Dockerfile

  delivery.api:
    image: ${DOCKER_REGISTRY-}deliveryapi
    build:
      context: .
      dockerfile: Services/Delivery/Delivery.API/Dockerfile

volumes:
  mongo_data:
  portainer_data:
  postgres_data:
  pgadmin_data:
  order_data:
  order_saga_data:
  identity_data:
  logging_data:
    driver: local







