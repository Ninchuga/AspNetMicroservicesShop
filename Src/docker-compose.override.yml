version: '3.4'

services:
  catalogdb:
    container_name: catalogdb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  basketdb:
    container_name: basketdb
    restart: always
    ports:
      - 6379:6379

  discountdb:
    container_name: discountdb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin1234
      - POSTGRES_DB=DiscountDb
    restart: always
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

  orderdb:
    container_name: orderdb
    environment:
      SA_PASSWORD: "SwN12345678"
      ACCEPT_EULA: "Y"
    restart: always
    ports:
      - 1433:1433
    volumes:
      - order_data:/var/opt/mssql

  identitydb:
    container_name: identitydb
    environment:
      SA_PASSWORD: "September24#"
      ACCEPT_EULA: "Y"
    restart: always
    ports:
      - 1444:1433
    volumes:
      - identity_data:/var/opt/mssql

  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672

  pgadmin:
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@aspnetrun.com
      - PGADMIN_DEFAULT_PASSWORD=admin1234
    restart: always
    ports:
      - 5050:80
    volumes:
      - pgadmin_data:/root/.pgadmin

  portainer:
    container_name: portainer
    restart: always
    ports:
      - 8080:8000
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  elasticsearch:
    container_name: elastics
    environment:
      - node.name=elastic
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - logging_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    #networks:
      #- elastic

  kibana:
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elastics:9200
      ELASTICSEARCH_HOSTS: http://elastics:9200
    #networks:
      #- elastic

  shopping.idp:
    container_name: shopping.identity
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://0.0.0.0:443;http://0.0.0.0:80
      - ASPNETCORE_HTTPS_PORT=8021
      - IdentityIssuer=https://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:8021
      - "ConnectionStrings:IdentityDb=Server=identitydb;Database=IdentityDb;User Id=sa;Password=September24#;"
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/Shopping.IDP.pfx
      - WebClientUrls:Razor=https://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:8999
      - Logging:ElasticUrl=http://elastics:9200
    depends_on:
      - identitydb
    ports:
      - "8021:443"
    volumes:
      - ./Identity/Shopping.IDP:/root/Identity
      - ./Identity/Shopping.IDP/certs:/https/
      - type: bind
        source: ./certs/shopping-root-cert.cer
        target: /https-root/shopping-root-cert.cer
      - type: bind
        source: ./certs/host-docker-internal.pfx
        target: /https/host-docker-internal.pfx

  catalog.api:
    container_name: catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DatabaseSettings:ConnectionString=mongodb://catalogdb:27017
      - IdentityProviderSettings:IdentityServiceUrl=https://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:8021
      - Logging:ElasticUrl=http://elastics:9200
      - ASPNETCORE_URLS=https://0.0.0.0:443;http://0.0.0.0:80
      - ASPNETCORE_HTTPS_PORT=8000
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/Catalog.API.pfx
    depends_on:
      - catalogdb
      - shopping.idp
    volumes:
      - ./Services/Catalog/Catalog.API:/root/Catalog
      - ./Services/Catalog/Catalog.API/certs:/https/
      - type: bind # Using a bind volume as only this single file from `certs` directory should end up in the container.
        source: ./certs/shopping-root-cert.cer
        target: /https-root/shopping-root-cert.cer
      - type: bind
        source: ./certs/host-docker-internal.pfx
        target: /https/host-docker-internal.pfx  
    ports:
      #- "8000:80"
      - "8000:443"

  basket.api:
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - CacheSettings:ConnectionString=basketdb:6379
      - GrpcSettings:DiscountUrl=https://discount.grpc
      - EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672
      - IdentityProviderSettings:IdentityServiceUrl=https://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:8021
      - Logging:ElasticUrl=http://elastics:9200
      - ASPNETCORE_URLS=https://0.0.0.0:443;http://0.0.0.0:80
      - ASPNETCORE_HTTPS_PORT=8001
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/Basket.API.pfx
    depends_on:
      - basketdb
      - rabbitmq
      - shopping.idp
    volumes:
      - ./Services/Basket/Basket.API:/root/Basket
      - ./Services/Basket/Basket.API/certs:/https/
      - type: bind # Using a bind volume as only this single file from `certs` directory should end up in the container.
        source: ./certs/shopping-root-cert.cer
        target: /https-root/shopping-root-cert.cer
    ports:
      #- "8001:80"
      - "8001:443"

  discount.api:
    container_name: discount.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=admin1234;"
    depends_on:
      - discountdb
      #- shopping.idp
    ports:
      - "8002:80"

  discount.grpc:
    container_name: discount.grpc
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=admin1234;"
      - IdentityProviderSettings:IdentityServiceUrl=https://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:8021
      - Logging:ElasticUrl=http://elastics:9200
      - ASPNETCORE_URLS=https://0.0.0.0:443;http://0.0.0.0:80
      - ASPNETCORE_HTTPS_PORT=8003
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/Discount.Grpc.pfx
    depends_on:
      - discountdb
      - shopping.idp
    volumes:
      - ./Services/Discount/Discount.Grpc:/root/DiscountGrpc
      - ./Services/Discount/Discount.Grpc/certs:/https/
      - type: bind # Using a bind volume as only this single file from `certs` directory should end up in the container.
        source: ./certs/shopping-root-cert.cer
        target: /https-root/shopping-root-cert.cer
    ports:
      #- "8003:80"
      - "8003:443"

  ordering.api:
    container_name: ordering.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings:OrderingConnectionString=Server=orderdb;Database=OrderDb;User Id=sa;Password=SwN12345678;
      - EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672
      - IdentityProviderSettings:IdentityServiceUrl=https://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:8021
      - Logging:ElasticUrl=http://elastics:9200
      - ASPNETCORE_URLS=https://0.0.0.0:443;http://0.0.0.0:80
      - ASPNETCORE_HTTPS_PORT=8004
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/Ordering.API.pfx
    depends_on:
      - orderdb
      - rabbitmq
      - shopping.idp
    volumes:
      - ./Services/Ordering/Ordering.API:/root/Ordering
      - ./Services/Ordering/Ordering.API/certs:/https/
      - type: bind # Using a bind volume as only this single file from `certs` directory should end up in the container.
        source: ./certs/shopping-root-cert.cer
        target: /https-root/shopping-root-cert.cer
    ports:
      #- "8004:80"
      - "8004:443"

  ocelotapigateway:
    container_name: ocelotapigateway
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IdentityProviderSettings:IdentityServiceUrl=https://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:8021
      - Logging:ElasticUrl=http://elastics:9200
      - ASPNETCORE_URLS=https://0.0.0.0:443;http://0.0.0.0:80
      - ASPNETCORE_HTTPS_PORT=8006
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/OcelotApiGateway.pfx
    depends_on:
      - catalog.api
      - basket.api
      - discount.api
      - discount.grpc
      - ordering.api
      - shopping.idp
    volumes:
      - ./ApiGateways/OcelotApiGateway:/root/OcelotApiGateway
      - ./ApiGateways/OcelotApiGateway/certs:/https/
      - type: bind # Using a bind volume as only this single file from `certs` directory should end up in the container.
        source: ./certs/shopping-root-cert.cer
        target: /https-root/shopping-root-cert.cer
      - type: bind
        source: ./certs/host-docker-internal.pfx
        target: /https/host-docker-internal.pfx
    ports:
      #- "8006:80"
      - "8006:443"

  shopping.aggregator:
    container_name: shopping.aggregator
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ApiSettings:CatalogUrl=https://catalog.api
      - ApiSettings:BasketUrl=https://basket.api
      - ApiSettings:OrderingUrl=https://ordering.api
      - IdentityProviderSettings:IdentityServiceUrl=https://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:8021
      - Logging:ElasticUrl=http://elastics:9200
      - ASPNETCORE_URLS=https://0.0.0.0:443;http://0.0.0.0:80
      - ASPNETCORE_HTTPS_PORT=8005
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/Shopping.Aggregator.pfx
    depends_on:
      - catalog.api
      - basket.api
      - discount.grpc
      - ordering.api
      - shopping.idp
    volumes:
      - ./ApiGateways/Shopping.Aggregator:/root/ShoppingAggregator
      - ./ApiGateways/Shopping.Aggregator/certs:/https/
      - type: bind # Using a bind volume as only this single file from `certs` directory should end up in the container.
        source: ./certs/shopping-root-cert.cer
        target: /https-root/shopping-root-cert.cer
    ports:
      #- "8005:80"
      - "8005:443"

    # redirection worked with ubuntu host ip 172.18.112.1 -> https://172.18.112.1:8021
  shopping.razor:
    container_name: shopping.razor
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IdentityProviderSettings:IdentityServiceUrl=https://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:8021
      - ApiSettings:Catalog:CatalogGatewayUrl=https://ocelotapigateway/Catalog/
      - ApiSettings:Basket:BasketGatewayUrl=https://ocelotapigateway/Basket/
      - ApiSettings:Order:OrderGatewayUrl=https://ocelotapigateway/Order/
      - ApiSettings:Aggregators:ShoppingAggregatorUrl=https://shopping.aggregator
      - Logging:ElasticUrl=http://elastics:9200
      - ASPNETCORE_URLS=https://0.0.0.0:443;http://0.0.0.0:80
      - ASPNETCORE_HTTPS_PORT=8999
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/Shopping.Razor.pfx
    volumes:
      - ./Clients/Shopping.Razor:/root/ShoppingRazor
      - ./Clients/Shopping.Razor/certs:/https/
      - type: bind
        source: ./certs/shopping-root-cert.cer
        target: /https-root/shopping-root-cert.cer
      - type: bind
        source: ./certs/host-docker-internal.pfx
        target: /https/host-docker-internal.pfx
    depends_on:
      - shopping.idp
      - shopping.aggregator
      - ocelotapigateway
    ports:
      #- "8999:80"
      - "8999:443"

  shopping.webstatus:
    container_name: shopping.webstatus
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - HealthChecksUI__HealthChecks__0__Name=Catalog Health Check
      - HealthChecksUI__HealthChecks__0__Uri=https://catalog.api/healthcheck
      - HealthChecksUI__HealthChecks__1__Name=Basket Health Check
      - HealthChecksUI__HealthChecks__1__Uri=https://basket.api/healthcheck
      - HealthChecksUI__HealthChecks__2__Name=Ordering Health Check
      - HealthChecksUI__HealthChecks__2__Uri=https://ordering.api/healthcheck
      - HealthChecksUI__HealthChecks__3__Name=Identity Provider Health Check
      - HealthChecksUI__HealthChecks__3__Uri=https://shopping.identity/healthcheck
      - HealthChecksUI__HealthChecks__4__Name=Shopping Aggregator Health Check
      - HealthChecksUI__HealthChecks__4__Uri=https://shopping.aggregator/healthcheck
      - HealthChecksUI__HealthChecks__5__Name=Shopping Razor Web Client Health Check
      - HealthChecksUI__HealthChecks__5__Uri=https://shopping.razor/healthcheck
      - HealthChecksUI__HealthChecks__6__Name=Ocelot Gateway Health Check
      - HealthChecksUI__HealthChecks__6__Uri=https://ocelotapigateway/healthcheck
      - HealthChecksUI__HealthChecks__7__Name=Order Saga Orchestrator Health Check
      - HealthChecksUI__HealthChecks__7__Uri=https://ordersagaorchestrator/healthcheck
      - HealthChecksUI__HealthChecks__8__Name=Payment API Health Check
      - HealthChecksUI__HealthChecks__8__Uri=https://payment.api/healthcheck
      - HealthChecksUI__HealthChecks__9__Name=Delivery API Health Check
      - HealthChecksUI__HealthChecks__9__Uri=https://delivery.api/healthcheck
      - GrpcSettings:DiscountUrl=https://discount.grpc
      - GrpcSettings:UsingDocker=true
      - Logging:ElasticUrl=http://elastics:9200
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/Shopping.WebStatus.pfx
    volumes:
      - ./Common/Shopping.WebStatus:/root/ShoppingWebStatus
      - ./Common/Shopping.WebStatus/certs:/https/
      - type: bind
        source: ./certs/shopping-root-cert.cer
        target: /https-root/shopping-root-cert.cer
    ports:
      - 8007:80

