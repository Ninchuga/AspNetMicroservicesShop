{
  "Routes": [
    //Catalog API
    {
      "DownstreamPathTemplate": "/api/v1/Catalog",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "catalog.api",
          "Port": "443"
        }
      ],
      "UpstreamPathTemplate": "/Catalog/api",
      "UpstreamHttpMethod": [ "GET", "POST", "PUT" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "ShoppingGatewayAuthenticationScheme"
        //"AllowedScopes": [ "catalogapi.fullaccess" ] // Ocelot checks for these scopes before sending the request to a microservice
      },
      "FileCacheOptions": { "TtlSeconds": 30 },
      "DelegatingHandlers": [ "CatalogApiTokenExchangeDelegatingHandler" ]
    },
    {
      "DownstreamPathTemplate": "/api/v1/Catalog/{id}",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "catalog.api",
          "Port": "443"
        }
      ],
      "UpstreamPathTemplate": "/Catalog/api/{id}",
      "UpstreamHttpMethod": [ "GET", "DELETE" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "ShoppingGatewayAuthenticationScheme"
        //"AllowedScopes": [ "catalogapi.fullaccess" ] // Ocelot checks for these scopes before sending the request to a microservice
      },
      "DelegatingHandlers": [ "CatalogApiTokenExchangeDelegatingHandler" ]
    },
    {
      "DownstreamPathTemplate": "/api/v1/Catalog/health/live",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "catalog.api",
          "Port": "443"
        }
      ],
      "UpstreamPathTemplate": "/Catalog/api/health/live",
      "UpstreamHttpMethod": [ "GET" ]
    },
    {
      "DownstreamPathTemplate": "/api/v1/Catalog/GetProductByCategory/{category}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "catalog.api",
          "Port": "443"
        }
      ],
      "UpstreamPathTemplate": "/Catalog/api/GetProductByCategory/{category}",
      "UpstreamHttpMethod": [ "GET" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "ShoppingGatewayAuthenticationScheme"
        //"AllowedScopes": [ "catalogapi.fullaccess" ] // Ocelot checks for these scopes before sending the request to a microservice
      },
      "DelegatingHandlers": [ "CatalogApiTokenExchangeDelegatingHandler" ]
    },
    //Basket API
    {
      "DownstreamPathTemplate": "/api/v1/Basket/{userId}",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "basket.api",
          "Port": "443"
        }
      ],
      "UpstreamPathTemplate": "/Basket/api/{userId}",
      "UpstreamHttpMethod": [ "GET" ],
      "AuthenticationOptions": { // authenticatiin key that Ocelot takes when firing a request to a route. If there is no key associated Ocelot will not start up
        "AuthenticationProviderKey": "ShoppingGatewayAuthenticationScheme"
        //"AllowedScopes": [ "basketapi.fullaccess" ] // Ocelot checks for these scopes before sending the request to a microservice
      },
      "DelegatingHandlers": [ "BasketApiTokenExchangeDelegatingHandler" ]
      // we don't need to pass this anymore because user info can be extracted from the incoming scope in the services
      //"AddHeadersToRequest": { // custom header that finds authenticated user sub claim value and pass it to downstream services
      //  "CurrentUser": "Claims[sub] > value"
      //}
    },
    {
      "DownstreamPathTemplate": "/api/v1/Basket/health/live",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "basket.api",
          "Port": "443"
        }
      ],
      "UpstreamPathTemplate": "/Basket/api/health/live",
      "UpstreamHttpMethod": [ "GET" ]
    },
    {
      "DownstreamPathTemplate": "/api/v1/Basket/DeleteBasketItem/{itemId}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "basket.api",
          "Port": "443"
        }
      ],
      "UpstreamPathTemplate": "/Basket/api/DeleteBasketItem/{itemId}",
      "UpstreamHttpMethod": [ "DELETE" ],
      "AuthenticationOptions": { // authenticatiin key that Ocelot takes when firing a request to a route. If there is no key associated Ocelot will not start up
        "AuthenticationProviderKey": "ShoppingGatewayAuthenticationScheme"
        //"AllowedScopes": [ "basketapi.fullaccess" ] // Ocelot checks for these scopes before sending the request to a microservice
      },
      "DelegatingHandlers": [ "BasketApiTokenExchangeDelegatingHandler" ]
      // we don't need to pass this anymore because user info can be extracted from the incoming scope in the services
      //"AddHeadersToRequest": { // custom header that finds authenticated user sub claim value and pass it to downstream services
      //  "CurrentUser": "Claims[sub] > value"
      //}
    },
    {
      "DownstreamPathTemplate": "/api/v1/Basket/Delete/{userId}",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "basket.api",
          "Port": "443"
        }
      ],
      "UpstreamPathTemplate": "/Basket/api/Delete/{userId}",
      "UpstreamHttpMethod": [ "DELETE" ],
      "AuthenticationOptions": { // authenticatiin key that Ocelot takes when firing a request to a route. If there is no key associated Ocelot will not start up
        "AuthenticationProviderKey": "ShoppingGatewayAuthenticationScheme"
        //"AllowedScopes": [ "basketapi.fullaccess" ] // Ocelot checks for these scopes before sending the request to a microservice
      },
      "DelegatingHandlers": [ "BasketApiTokenExchangeDelegatingHandler" ]
      // we don't need to pass this anymore because user info can be extracted from the incoming scope in the services
      //"AddHeadersToRequest": { // custom header that finds authenticated user sub claim value and pass it to downstream services
      //  "CurrentUser": "Claims[sub] > value"
      //}
    },
    {
      "DownstreamPathTemplate": "/api/v1/Basket/UpdateBasket",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "basket.api",
          "Port": "443"
        }
      ],
      "UpstreamPathTemplate": "/Basket/api/UpdateBasket",
      "UpstreamHttpMethod": [ "POST" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "ShoppingGatewayAuthenticationScheme"
        //"AllowedScopes": [ "basketapi.fullaccess" ] // Ocelot checks for these scopes before sending the request to a microservice
      },
      "DelegatingHandlers": [ "BasketApiTokenExchangeDelegatingHandler" ]
      // we don't need to pass this anymore because user info can be extracted from the incoming scope in the services
      //"AddHeadersToRequest": { // custom header that finds authenticated user sub claim value and pass it to downstream services
      //  "CurrentUser": "Claims[sub] > value"
      //}
    },
    {
      "DownstreamPathTemplate": "/api/v1/Basket/AddBasketItem",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "basket.api",
          "Port": "443"
        }
      ],
      "UpstreamPathTemplate": "/Basket/api/AddBasketItem",
      "UpstreamHttpMethod": [ "POST" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "ShoppingGatewayAuthenticationScheme"
        //"AllowedScopes": [ "basketapi.fullaccess" ] // Ocelot checks for these scopes before sending the request to a microservice
      },
      "DelegatingHandlers": [ "BasketApiTokenExchangeDelegatingHandler" ]
      // we don't need to pass this anymore because user info can be extracted from the incoming scope in the services
      //"AddHeadersToRequest": { // custom header that finds authenticated user sub claim value and pass it to downstream services
      //  "CurrentUser": "Claims[sub] > value"
      //}
    },
    {
      "DownstreamPathTemplate": "/api/v1/Basket/Checkout",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "basket.api",
          "Port": "443"
        }
      ],
      "UpstreamPathTemplate": "/Basket/api/Checkout",
      "UpstreamHttpMethod": [ "POST" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "ShoppingGatewayAuthenticationScheme"
        //"AllowedScopes": [ "basketapi.fullaccess" ] // Ocelot checks for these scopes before sending the request to a microservice
      },
      "DelegatingHandlers": [ "BasketApiTokenExchangeDelegatingHandler" ],
      // we don't need to pass this anymore because user info can be extracted from the incoming scope in the services
      //"AddHeadersToRequest": { // custom header that finds authenticated user sub claim value and pass it to downstream services
      //  "CurrentUser": "Claims[sub] > value"
      //},
      "RateLimitOptions": {
        "ClientWhitelist": [],
        "EnableRateLimiting": true,
        "Period": "3s",
        "PeriodTimespan": 1,
        "Limit": 1
      }
    },
    // TODO: Remove Discount API configuration because it will never be accessed through API Gateway directly but from the Basket API
    //Discount API
    //{
    //  "DownstreamPathTemplate": "/api/v1/Discount/{productName}",
    //  "DownstreamScheme": "http",
    //  "DownstreamHostAndPorts": [
    //    {
    //      "Host": "localhost",
    //      //"Port": "8002" // for docker api
    //      "Port": "5002"
    //    }
    //  ],
    //  "UpstreamPathTemplate": "/Discount/api/{productName}",
    //  "UpstreamHttpMethod": [ "GET", "DELETE" ]
    //},
    //{
    //  "DownstreamPathTemplate": "/api/v1/Discount",
    //  "DownstreamScheme": "http",
    //  "DownstreamHostAndPorts": [
    //    {
    //      "Host": "localhost",
    //      //"Port": "8002" // for docker api
    //      "Port": "5002"
    //    }
    //  ],
    //  "UpstreamPathTemplate": "/Discount/api",
    //  "UpstreamHttpMethod": [ "PUT", "POST" ]
    //},

    //Order API
    {
      "DownstreamPathTemplate": "/api/v1/Order/{userId}",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "ordering.api",
          "Port": "443"
        }
      ],
      "UpstreamPathTemplate": "/Order/api/{userId}",
      "UpstreamHttpMethod": [ "GET" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "ShoppingGatewayAuthenticationScheme"
        //"AllowedScopes": [ "basketapi.fullaccess" ] // Ocelot checks for these scopes before sending the request to a microservice
      },
      "DelegatingHandlers": [ "OrderApiTokenExchangeDelegatingHandler" ]
    }
  ],
  "GlobalConfiguration": {
    "BaseUrl": "https://localhost:5010"
  },
  "IdentityProviderSettings": {
    "IdentityServiceUrl": "https://localhost:44318"
  }
}
