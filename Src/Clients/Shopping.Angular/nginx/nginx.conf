# cd /etc/nginx/sites-available
# vi node_or_angular_app.conf

user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events
{
  worker_connections 1024;
}

# All traffic destined to the domain SUBDOMAIN.DOMAIN.TLD and those matches with root location block (/) will be forwarded to https://PRIVATE_IP:3000
# where the node or angular application is running.
http {

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name host.docker.internal:8200;
        ssl_certificate /etc/ssl/certs/angularclient.crt; #/etc/nginx/certs/angularclient.crt;
        ssl_certificate_key /etc/ssl/private/angularclient.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        return 301 https://$host$request_uri; # redirect all the traffic from http (80) to https (443) configuration
    }

    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name host.docker.internal:8200;
        ssl_certificate /etc/ssl/certs/angularclient.crt; #/etc/nginx/certs/angularclient.crt;
        ssl_certificate_key /etc/ssl/private/angularclient.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

        location / {
            #### Gzip Settings  ####
            gzip on;
            gzip_min_length   1100;
            gzip_vary         on;
            gzip_proxied      expired no-cache no-store private auth;
            gzip_types        text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
            gzip_comp_level   5;

            #### Serve Angular Application ####
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;
        }

        location /.well-known {
            resolver 127.0.0.11;
            set $identityprovider shopping.identity; # don't specify port number in here (e.g. :8021), just give nginx container name and it will resolve it
            proxy_pass https://$identityprovider;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /Catalog/api {
            resolver 127.0.0.11;
            #proxy_redirect off;
            set $ocelotgateway ocelotapigateway;
            proxy_pass https://$ocelotgateway;
            #proxy_set_header Host $host;
            #proxy_set_header X-Real-IP $remote_addr;
            #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #proxy_set_header X-Forwarded-Host $host;
            #proxy_set_header X-Forwarded-Server $host;
            #proxy_set_header X-Forwarded-Port $server_port;
            #proxy_set_header X-Forwarded-Proto $scheme;
            # proxy_set_header Authorization "Bearer $http_authorization";
            # proxy_pass_header Authorization;
            #auth_request_set $token  $upstream_http_x_auth_request_access_token;
            #proxy_set_header X-Access-Token $token;
            #proxy_set_header Authorization "Bearer $token";
            proxy_pass_request_headers on;
            proxy_pass_header Authorization;
        }

        # Redirect the browser to our port 8200 config
        #return 301 $scheme://localhost:8200$request_uri;
    }

    server {
        listen 8200 ssl http2;
        listen [::]:8200 ssl http2;
        server_name localhost:8200;
        ssl_certificate /etc/ssl/certs/angularclient.crt; #/etc/nginx/certs/angularclient.crt;
        ssl_certificate_key /etc/ssl/private/angularclient.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

        location ^~ /.well-known {
            rewrite ^/.well-known/?(.*) /$1 break;
            allow all;
            set $identityprovider host.docker.internal:8021;
            proxy_pass https://$identityprovider;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            #rewrite /Catalog/api;
            # resolver 127.0.0.11 ipv6=off;
            # proxy_redirect off;
            # set $ocelotgateway ocelotapigateway:8006;
            # proxy_pass https://$ocelotgateway;
            #### Gzip Settings  ####
            gzip on;
            gzip_min_length   1100;
            gzip_vary         on;
            gzip_proxied      expired no-cache no-store private auth;
            gzip_types        text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
            gzip_comp_level   5;

            #### Serve Angular Application ####
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;
        }

        location /home {
            #### Gzip Settings  ####
            gzip on;
            gzip_min_length   1100;
            gzip_vary         on;
            gzip_proxied      expired no-cache no-store private auth;
            gzip_types        text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
            gzip_comp_level   5;

            #### Serve Angular Application ####
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;
        }

        location /catalog {
            #rewrite Catalog/api;
            resolver 127.0.0.11 ipv6=off;
            proxy_redirect off;
            set $ocelotgateway ocelotapigateway:8006;
            proxy_pass https://$ocelotgateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /Catalog/api {
            resolver 127.0.0.11 ipv6=off;
            proxy_redirect off;
            set $ocelotgateway ocelotapigateway:8006;
            proxy_pass https://$ocelotgateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ~ /Basket {
            rewrite ^/Basket/?(.*) /$1 break;
            set $ocelotgateway ocelotapigateway:8006;
            proxy_pass https://$ocelotgateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ~ /orders {
            set $ocelotgateway ocelotapigateway:8006;
            proxy_pass https://$ocelotgateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    ssl_password_file /etc/nginx/ssl_passwords.txt; # file with certificate PEM secret init
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    sendfile on;
    keepalive_timeout 30m;
    include /etc/nginx/conf.d/*.conf;
}
